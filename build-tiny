#!/usr/bin/env bash
ME=$(readlink -f $0)
BASE=$(dirname $ME)
SOURCES=${BASE}/src
W_BASE=${BASE}/workdir-tiny
W_LOCAL=${W_BASE}/usr/local
W_SCRIPT=${W_BASE}/buildscript.$$
BUILDENV=mbrown/buildenv:latest

do_buildscript () {
    NAME=${1:-plexpost}
    chmod 755 ${W_SCRIPT}
    docker run --rm \
        --name build-${NAME} \
        -it \
        -u root \
        -v ${W_SCRIPT}:/buildscript \
        -v ${W_LOCAL}:/usr/local \
        -v ${W_BASE}/etc/cont-init.d:/etc/cont-init.d \
        -v ${W_BASE}/etc/fix-attrs.d:/etc/fix-attrs.d \
        -v ${W_BASE}/etc/services.d:/etc/services.d \
        -v ${SOURCES}:/src \
        ${BUILDENV} bash -c /buildscript | tee ${BASE}/logs/build-${NAME}.log
    [ -f ${W_SCRIPT} ] && rm ${W_SCRIPT}
}

echo '===================================================================================================='
echo '== Preparing Build Environment                                                                    =='
echo '===================================================================================================='
[ -d ${W_BASE} ] && rm -rf ${W_BASE}
mkdir -p ${W_BASE} && \
  mkdir -p ${W_LOCAL} && \
  mkdir -p ${W_BASE}/etc/cont-init.d && \
  mkdir -p ${W_BASE}/etc/fix-attrs.d && \
  mkdir -p ${W_BASE}/etc/services.d && \
  mkdir -p ${W_LOCAL}/bin \
  || {
    echo "Error creating working directories"
    exit
}

echo '===================================================================================================='
echo '== Updating tinycgi                                                                               =='
echo '===================================================================================================='
cat > ${W_SCRIPT} <<EOD
#!/usr/bin/env bash
export SOURCE=/src
echo Building tinycgi from \$SOURCE
mkdir /golang
mkdir /golang/bin
export GOPATH=/golang
export GOBIN=/golang/bin
go install -ldflags="-s -w" \${SOURCE}/tinycgi.go
ls -l \$GOPATH/bin/tinycgi
upx --brute \$GOPATH/bin/tinycgi
ls -l \$GOPATH/bin/tinycgi
cp -v \$GOPATH/bin/tinycgi /usr/local/bin/tinycgi
EOD
do_buildscript tinycgi

